//
// Created by intellij-pest on 2021-04-26
// LOOP main grammar as defined theoretical computer science and logic
// Author: bmahmoud
//

// Defaults
WHITESPACE = _{ " " | "\t" }

grammar = _{ SOI ~ Terms ~ EOI }

// Terminals:
IDENT = @{ ASCII_ALPHA+ }

OP_PLUS = { "+" }
OP_MINUS = { "-" }
OP_MULTIPLY = { "*" }

SIMPLE_OPERATOR = _{ OP_PLUS | OP_MINUS }
EXT_OPERATOR = _{ OP_MULTIPLY }
OPERATOR = _{ SIMPLE_OPERATOR |  EXT_OPERATOR }

VALUE = @{ ASCII_DIGIT+ }
SEP = _{ (";" | ";"? ~ NEWLINE+) }

// Comparison Collection
compEqual = { IDENT ~ ("=" | "==") ~ VALUE }
compNotEqual = { IDENT ~ "!=" ~ VALUE }
compGreaterEqual = { IDENT ~ ">=" ~ VALUE }
compGreaterThan = { IDENT ~ ">"  ~ VALUE }
compLessEqual = { IDENT ~ "<=" ~ VALUE }
compLessThan = { IDENT ~ "<"  ~ VALUE }

comp = _{
    compEqual
    | compNotEqual
}

// Core Language:
assign = {
    IDENT ~ ":=" ~
    IDENT ~ SIMPLE_OPERATOR ~ VALUE
}

loop_ = {
    "LOOP" ~ IDENT ~ "DO" ~ SEP
    ~ Terms ~
    "END"
}

while_ = {
    "WHILE" ~ compNotEqual ~ "DO" ~ SEP
    ~ Terms ~
    "END"
}

// macros
macroAssignToIdent = {
    IDENT ~ ":=" ~
    IDENT
}
macroAssignToZero =   {
    IDENT ~ ":=" ~
    "0"
}
macroAssignToValue = {
    IDENT ~ ":=" ~
    VALUE
}
macroAssignToIdentOpIdent = {
    IDENT ~ ":=" ~
    IDENT ~ OPERATOR ~ IDENT
}
macroAssignToIdentExtOpValue = {
    IDENT ~ ":=" ~
    IDENT ~ EXT_OPERATOR ~ VALUE
}

macroIf = {
    "IF" ~ compNotEqual ~ "THEN" ~ SEP
    ~ Terms ~
    "END"
}
macroIfElse = {
    "IF" ~ compNotEqual ~ "THEN" ~ SEP
    ~ Terms ~
    "ELSE" ~ SEP
    ~ Terms ~
    "END"
}

macro_ = _{
    macroAssignToIdentExtOpValue
    | macroAssignToIdentOpIdent
    | macroAssignToIdent
    | macroAssignToZero
    | macroAssignToValue
    | macroIf
    | macroIfElse
}

// Expression Collection:
Expression = _{
    loop_
    | while_
    | assign
    | macro_
}

Terms = _{
    NEWLINE* ~
    Expression ~
    (SEP ~ Expression)* ~
    SEP?
}