name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: ./engine

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions: 
      contents: read
      packages: write 

    steps:
    # Install Requirements
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12.x'
    - name: Install Quicktype
      run: npm i -g quicktype
    - name: Install wasm-pack
      uses: jetli/wasm-pack-action@v0.3.0
    # Build WASM
    - name: Build WASM
      run: wasm-pack build --release --target=web --scope lit
    - name: Rename NPM Package
      run: |
        sed -i -e 's#"name": "@lit/lit"#"name": "@loopit!/engine"#g' pkg/package.json
    - name: Include all files
      uses: jossef/action-set-json-field@v1
      with:
        file: engine/pkg/package.json
        field: 'files'
        value: '["*"]'
        parse_json: true
    - name: Extract version from package.json
      uses: sergeysova/jq-action@v2
      id: version
      with:
        cmd: 'jq .version engine/pkg/package.json -r'
    - name: Bump package.json version
      working-directory: ./engine/pkg
      run: |
        curl https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver > semver;
        chmod +x semver;
        npm version $(if [[ $(./semver compare $(npm show '@loopit!/engine' version) ${{ steps.version.outputs.value }}) -ge 0 ]]; then ./semver bump patch $(npm show '@loopit!/engine' version); else echo ${{ steps.version.outputs.value }}; fi;) --allow-same-version;
        rm semver;
        cat package.json
    # TypeScript Definitions from JSON-Schema
    - name: Generate Schema
      run: cargo run --package lit --features cli --bin lit schema --mode overwrite --output pkg/schema/
    - name: Generate TypeScript Definitions
      run: quicktype pkg/schema/root.json -o pkg/schema.ts -s schema --just-types --acronym-style original --nice-property-names --explicit-unions
    # Upload Artifacts to GitHub
    - run: npm install
      working-directory: ./engine/pkg
    - uses: JS-DevTools/npm-publish@v1
      with:
        access: public
        package: ./engine/pkg/package.json
        token: ${{ secrets.NPM_TOKEN }}
        check-version: false
  
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose
